// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxCalculator.Server.Data;

#nullable disable

namespace TaxCalculator.Server.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaxCalculator.Server.Data.Models.TaxSceme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("MaxSalary")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<decimal>("MinSalary")
                        .HasPrecision(7, 2)
                        .HasColumnType("decimal(7,2)");

                    b.Property<decimal>("TaxRate")
                        .HasPrecision(2, 2)
                        .HasColumnType("decimal(2,2)");

                    b.HasKey("Id");

                    b.ToTable("TaxSceme", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxSalary = 5000m,
                            MinSalary = 0m,
                            TaxRate = 0m
                        },
                        new
                        {
                            Id = 2,
                            MaxSalary = 20000m,
                            MinSalary = 5000m,
                            TaxRate = 0.20m
                        },
                        new
                        {
                            Id = 3,
                            MinSalary = 20000m,
                            TaxRate = 0.40m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
